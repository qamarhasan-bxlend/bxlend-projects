name: Production Release & Deployment

on:
  workflow_dispatch:

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest

  #   env:
  #     RELEASE: ${{ github.ref }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Use Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 18.15.0

  #     - name: Install packages
  #       run: yarn --pure-lockfile

  #     - name: Lint
  #       run: yarn lint

  #     - name: Build
  #       run: yarn build

  #      - name: Test
  #        run: npm run test:ci

  #      - name: Upload coverage to Codecov
  #        uses: codecov/codecov-action@v1
  #        with:
  #          token: ${{ secrets.CODECOV_TOKEN }}
  #          env_vars: RELEASE
  #          fail_ci_if_error: true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    # needs:
    #   - test

    steps:
      - uses: actions/checkout@v2

      - run: echo "CUSTOM_TAG=v${{ github.sha }}" >> $GITHUB_ENV
      - run: echo ${{ env.CUSTOM_TAG }}

      - name: Changelog
        id: changelog
        uses: ardalanamini/auto-changelog@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: rickstaa/action-create-tag@v1
        id: 'tag_create'
        with:
          tag: ${{ env.CUSTOM_TAG }}
          force_push_tag: true
          tag_exists_error: false
          message: 'Release ${{ env.CUSTOM_TAG }}'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ steps.changelog.outputs.changelog }}
          release_name: ${{ env.CUSTOM_TAG }}
          tag_name: ${{ env.CUSTOM_TAG }}

  github_registry:
    name: Push Docker image to GitHub Packages
    needs:
      - release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - run: echo "CUSTOM_TAG=v${{ github.sha }}" >> $GITHUB_ENV
      - run: echo ${{ env.CUSTOM_TAG }}

      - name: Creating environment file
        run: |
          touch .env
          echo "REACT_APP_NODE_ENV=production" >> .env
          echo "REACT_APP_PUBLIC_URL=https://api.bxlend.com" >> .env
          echo "REACT_APP_CLIENT_ID=${{secrets.PRODUCTION_WEBSITE_CLIENT_ID}}" >> .env
          echo "REACT_APP_AUTH_URL=https://api.bxlend.com" >> .env
          echo "REACT_APP_AUTH_REDIRECT_URI=${{secrets.PRODUCTION_WEBSITE_CLIENT_REDIRECT_URI}}" >> .env
          echo "REACT_APP_STREAM_URL=wss://stream.bxlend.com" >> .env
          echo "REACT_APP_BASIC_AUTH_CLIENT_ID=${{secrets.PRODUCTION_WEBSITE_CLIENT_ID}}" >> .env
          echo "REACT_APP_BASIC_AUTH_CLIENT_SECRET=${{secrets.PRODUCTION_WEBSITE_CLIENT_SECRET}}" >> .env
          echo "REACT_APP_S3_KYC_URL=https://sgp1.digitaloceanspaces.com/production-bxlen/kyc_document" >> .env
          echo "REACT_APP_BITSTAMP_WEBSOCKET_URL=wss://ws.bitstamp.net" >> .env
          echo "REACT_APP_BITSTAMP_HTTPS_URL=https://www.bitstamp.net" >> .env
          
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          repository: btcex-pro/bxlend-client-app
          tag_with_ref: false
          tag_with_sha: false
          tags: ${{ env.CUSTOM_TAG }}

  deploy:
    name: Deploy API to DigitalOcean Kubernetes
    needs:
      - github_registry
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - run: echo "CUSTOM_TAG=v${{ github.sha }}" >> $GITHUB_ENV
      - run: echo ${{ env.CUSTOM_TAG }}

      # Install doctl.
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Set Kubernetes variables.
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|ghcr.io/btcex-pro/bxlend-client-app:${{ env.CUSTOM_TAG }}|g' $GITHUB_WORKSPACE/kubernetes.yml

      - name: Set APP_DOMAIN
        run: sed -i 's|<APP_DOMAIN>|bxlend.com|g' $GITHUB_WORKSPACE/kubernetes.yml

      - name: Set WWW_APP_DOMAIN
        run: sed -i 's|<WWW_APP_DOMAIN>|www.bxlend.com|g' $GITHUB_WORKSPACE/kubernetes.yml

      - name: Set CLUSTER_ISSUER_NAME
        run: sed -i 's|<CLUSTER_ISSUER_NAME>|letsencrypt-production|g' $GITHUB_WORKSPACE/kubernetes.yml

      - run: cat $GITHUB_WORKSPACE/kubernetes.yml

      # Deploy to DigitalOcean Kubernetes.
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-sgp1-production

      - name: Upload credentials of your registry to your DigitalOcean Kubernetes cluster
        run: kubectl create secret docker-registry btcex-web-app-registry --docker-server="ghcr.io" --docker-email="kevinng@bxlend.com" --docker-username="kevinng999" --docker-password="${{ secrets.REGISTRY_TOKEN }}" -o yaml --dry-run=client | kubectl replace --force -f -


      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/kubernetes.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/btcex-web-app
