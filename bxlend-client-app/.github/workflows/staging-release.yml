name: Staging Deployment

on:
  push:
    branches:
      - feat-ci-cd
      - staging
  workflow_dispatch:

jobs:
  github_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          #cache: pip

      - name: Add Python to PATH
        run: |
          echo "Adding Python to PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Set PYTHON Environment Variable
        run: |
          echo "Setting PYTHON environment variable"
          echo "PYTHON=$(which python3)" >> $GITHUB_ENV

      - name: Install Node.js Dependencies
        run: npm install

      - run: echo "CUSTOM_TAG=stg-${{ github.sha }}" >> $GITHUB_ENV
      - run: echo ${{ env.CUSTOM_TAG }}

      - name: Setting-Up environment file
        run: |
          touch .env
          echo "REACT_APP_NODE_ENV=development" >> .env
          echo "REACT_APP_PUBLIC_URL=https://staging-api.bxlend.com" >> .env
          echo "REACT_APP_CLIENT_ID=${{ secrets.STAGING_WEBSITE_CLIENT_ID }}" >> .env
          echo "REACT_APP_AUTH_URL=https://staging-api.bxlend.com" >> .env
          echo "REACT_APP_AUTH_REDIRECT_URI=${{ secrets.STAGING_WEBSITE_CLIENT_REDIRECT_URI }}" >> .env
          echo "REACT_APP_STREAM_URL=wss://staging-stream.bxlend.com" >> .env
          echo "REACT_APP_BASIC_AUTH_CLIENT_ID=${{ secrets.STAGING_WEBSITE_CLIENT_ID }}" >> .env
          echo "REACT_APP_BASIC_AUTH_CLIENT_SECRET=${{ secrets.STAGING_WEBSITE_CLIENT_SECRET }}" >> .env
          echo "REACT_APP_S3_KYC_URL=https://sgp1.digitaloceanspaces.com/staging-btcex/kyc_document" >> .env
          echo "REACT_APP_BITSTAMP_WEBSOCKET_URL=wss://ws.bitstamp.net" >> .env
          echo "REACT_APP_BITSTAMP_HTTPS_URL=https://www.bitstamp.net" >> .env

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
        #   username: kevinng999
        #   password: ${{ secrets.REGISTRY_TOKEN }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          repository: btcex-pro/bxlend-client-app
          tag_with_ref: false
          tag_with_sha: false
          tags: ${{ env.CUSTOM_TAG }}

  deploy:
    name: Deploy API to DigitalOcean Kubernetes
    needs:
      - github_registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "CUSTOM_TAG=stg-${{ github.sha }}" >> $GITHUB_ENV
      - run: echo ${{ env.CUSTOM_TAG }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|ghcr.io/btcex-pro/bxlend-client-app:${{ env.CUSTOM_TAG }}|g' $GITHUB_WORKSPACE/kubernetes.yml
      - name: Set APP_DOMAIN
        run: sed -i 's|<APP_DOMAIN>|staging.bxlend.com|g' $GITHUB_WORKSPACE/kubernetes.yml
      - name: Set WWW_APP_DOMAIN
        run: sed -i 's|<WWW_APP_DOMAIN>|staging.bxlend.com|g' $GITHUB_WORKSPACE/kubernetes.yml
      - name: Set CLUSTER_ISSUER_NAME
        run: sed -i 's|<CLUSTER_ISSUER_NAME>|letsencrypt-prod|g' $GITHUB_WORKSPACE/kubernetes.yml
      - run: cat $GITHUB_WORKSPACE/kubernetes.yml
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-sgp1-staging
      - name: Upload credentials of your registry to your DigitalOcean Kubernetes cluster
        run: kubectl create secret docker-registry btcex-web-app-registry --docker-server="ghcr.io" --docker-email="kevinng@bxlend.com" --docker-username="kevinng999" --docker-password="${{ secrets.REGISTRY_TOKEN }}" -o yaml --dry-run=client | kubectl replace --force -f -
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/kubernetes.yml
      - name: Verify deployment
        run: kubectl rollout status deployment/btcex-web-app
